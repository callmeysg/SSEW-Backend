#
# Copyright 2025 Aryan Singh
# Developer: Aryan Singh (@singhtwenty2)
# Portfolio: https://singhtwenty2.pages.dev/
# This file is part of SSEW E-commerce Backend System
# Licensed under MIT License
# For commercial use and inquiries: aryansingh.corp@gmail.com
# @author Aryan Singh (@singhtwenty2)
# @project SSEW E-commerce Backend System
# @since 2025
#

services:
  postgres:
    image: postgres:15-alpine
    container_name: ssew-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ssew}
      POSTGRES_USER: ${POSTGRES_USER:-ssew_owner}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ssew_owner} -d ${POSTGRES_DB:-ssew}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ssew-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

  commerce-service:
    image: singhtwenty2/ssew-commerce-service:${COMMERCE_IMAGE_TAG:-latest}
    container_name: ssew-commerce-service
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-ssew}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-ssew_owner}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
      GRPC_TELEMETRY-SERVICE_HOST: telemetry-service
      GRPC_TELEMETRY-SERVICE_PORT: 9002
      AWS_REGION: ${AWS_REGION}
      AWS_S3_TEMP_BUCKET: ${AWS_S3_TEMP_BUCKET}
      AWS_S3_TEMP_FOLDER: ${AWS_S3_TEMP_FOLDER}
      AWS_S3_PERMANENT_FOLDER: ${AWS_S3_PERMANENT_FOLDER}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      JWT_SECRET: ${JWT_SECRET}
      APP_SECURITY_DEVELOPER_SECRET: ${APP_DEVELOPER_SECRET}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      SENTRY_DSN: ${SENTRY_DSN}
      MAIL_USERNAME: "${MAIL_USERNAME}"
      MAIL_PASSWORD: "${MAIL_PASSWORD}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  telemetry-service:
    image: singhtwenty2/ssew-telemetry-service:${TELEMETRY_IMAGE_TAG:-latest}
    container_name: ssew-telemetry-service
    ports:
      - "9001:9001"
      - "9002:9002"
    environment:
      PORT: 9001
      ENVIRONMENT: ${ENVIRONMENT:-prod}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: 0
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
      MAX_EVENTS_PER_POLL: ${MAX_EVENTS_PER_POLL:-50}
      DEFAULT_TTL_SECONDS: ${DEFAULT_TTL_SECONDS:-300}
      SHORT_POLL_INTERVAL_MS: ${SHORT_POLL_INTERVAL_MS:-5000}
      LONG_POLL_INTERVAL_MS: ${LONG_POLL_INTERVAL_MS:-30000}
      LONG_POLL_TIMEOUT_MS: ${LONG_POLL_TIMEOUT_MS:-25000}
      WORKER_POOL_SIZE: ${WORKER_POOL_SIZE:-100}
      REDIS_POOL_SIZE: ${REDIS_POOL_SIZE:-50}
      REDIS_MIN_IDLE_CONNS: ${REDIS_MIN_IDLE_CONNS:-10}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:
  redis_data:

networks:
  ssew-network:
    driver: bridge