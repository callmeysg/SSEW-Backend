#
# Copyright 2025 Aryan Singh
# Developer: Aryan Singh (@singhtwenty2)
# Portfolio: https://singhtwenty2.pages.dev/
# This file is part of SSEW E-commerce Backend System
# Licensed under MIT License
# For commercial use and inquiries: aryansingh.corp@gmail.com
# @author Aryan Singh (@singhtwenty2)
# @project SSEW E-commerce Backend System
# @since 2025
#

services:
  postgres:
    image: postgres:15-alpine
    container_name: ssew-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ssew}
      POSTGRES_USER: ${POSTGRES_USER:-ssew_owner}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ssew_owner} -d ${POSTGRES_DB:-ssew}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ssew-redis
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

  commerce-service:
    image: singhtwenty2/ssew-commerce-service:${COMMERCE_IMAGE_TAG:-prod-latest}
    container_name: ssew-commerce-service
    env_file:
      - .env
    ports:
      - "9000:9000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-ssew}
      SPRING_DATA_REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      GRPC_TELEMETRY-SERVICE_HOST: telemetry-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  telemetry-service:
    image: singhtwenty2/ssew-telemetry-service:${TELEMETRY_IMAGE_TAG:-prod-latest}
    container_name: ssew-telemetry-service
    env_file:
      - .env
    ports:
      - "9001:9001"
      - "9002:9002"
    environment:
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - ssew-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:
  redis_data:

networks:
  ssew-network:
    driver: bridge